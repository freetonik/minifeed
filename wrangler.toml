name = "minifeed"
compatibility_flags = ["nodejs_compat"]
compatibility_date = "2024-09-23"

workers_dev = false
route = { pattern = "*minifeed.net/*", zone_name = "minifeed.net" }
main = "src/index.ts"

[placement]
mode = "smart"

[vars]
TYPESENSE_API_KEY_SEARCH = "GCuPvjR4vz3gvACRo2N5hpRjZnEaijKE"
TYPESENSE_BLOG_FEEDS_COLLECTION = "blog_feeds"
TYPESENSE_CLUSTER = "3afyidm6tgzxlvq7p-1.a1.typesense.net"
TYPESENSE_ITEMS_COLLECTION = "items"
TYPESENSE_FEEDS_COLLECTION = "feeds"

[[vectorize]]
binding = "VECTORIZE"
index_name = "embeddings-main"

[[d1_databases]]
binding = "DB"
database_name = "minifeed"
database_id = "d059129a-d855-4e39-ae1f-64e92b9c40a1"

[[r2_buckets]]
binding = 'MBLOG_IMAGES'
bucket_name = 'mblog-images'

[[kv_namespaces]]
binding = "SESSIONS_KV"
id = "269cab6a695244cfab39cdc624497d4a"
preview_id = "9d89d9fbf0c74d4fbae269cd4c5cb0dd"

[[queues.producers]]
queue = "feed-update"
binding = "FEED_UPDATE_QUEUE"

[[queues.consumers]]
queue = "feed-update"
max_batch_size = 1    # optional: defaults to 10
max_batch_timeout = 5 # optional: defaults to 5 seconds

[triggers]
crons = ["*/30 * * * *"]

[observability]
enabled = true

[ai]
binding = "AI" # available in your Worker on env.AI